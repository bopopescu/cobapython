import threading
import mysql.connector
import datetime
import urllib.request as urllib2
import time

db = mysql.connector.connect(
    host="127.0.0.1",
    user="root",
    passwd="",
    database="brofistool"
)
conn = db.cursor()
hasil_test = []

def data():
    print("Proses Dimulai")
    sql_apn = "SELECT apn FROM t_fraud_test_progress_detail WHERE suspect_fraud IS NULL GROUP BY apn"
    conn.execute(sql_apn)
    apns = conn.fetchall()
    for apn in apns:
        sql_proxy = "SELECT id,ip_address,url,port " \
                    "FROM t_fraud_test_progress_detail " \
                    "WHERE suspect_fraud IS NULL " \
                    "AND modem = 'modem-1' " \
                    "AND test_type = 'proxy tunneling' " \
                    "AND apn = '%s' " \
                    "LIMIT 10" % apn
        conn.execute(sql_proxy)
        proxys = conn.fetchall()
        t = threading.Thread(target=proxy_check, args=[proxys])
        t.start()
        t.join()
    print("Proses Selesai")

    for hasil in hasil_test:
        update = "UPDATE t_fraud_test_progress_detail " \
                 "SET suspect_fraud = '%s', " \
                 "started_at = '%s', " \
                 "finished_at = '%s' " \
                 "WHERE id = %s" % (hasil[3],hasil[1],hasil[2],hasil[0])
        conn.execute(update)
    db.commit()

def proxy_check(proxy):
    print(threading.currentThread().getName(), 'Starting')
    for data in proxy:
        id = data[0]
        ip = data[2]
        if ip is None:
            ip = data[1]
        port = data[3]
        if port is None:
            port = 1080

        address = str(ip) + ":" + str(port)
        # print(address)
        now = datetime.datetime.now()
        started = now.strftime("%Y-%m-%d %H:%M:%S")
        try:
            proxy_handler = urllib2.ProxyHandler({'http': address})
            opener = urllib2.build_opener(proxy_handler)
            opener.addheaders = [('User-agent', 'Mozilla/5.0')]
            urllib2.install_opener(opener)
            req = urllib2.Request("http://103.41.204.195/ping.php")
            sock = urllib2.urlopen(req, timeout=10)
            rs = sock.read(1000)
            if rs is None:
                proxy_result = "No"
            else:
                proxy_result = "Yes"
            now = datetime.datetime.now()
            finished = now.strftime("%Y-%m-%d %H:%M:%S")
        except:
            proxy_result = "No"
            now = datetime.datetime.now()
            finished = now.strftime("%Y-%m-%d %H:%M:%S")

        isi_test = [id, started, finished, proxy_result]
        hasil_test.append(isi_test)
        print(threading.currentThread().getName(), 'Exiting')
data()