import urllib.request as urllib2
import socks
import socket
import requests
import threading
import time

# proxies = ['118.96.149.97:4145','114.6.176.179:4145','43.248.24.235:4145','210.57.216.109:4145','150.107.246.141:4145',
#            '36.67.184.179:4145','122.200.144.25:4145','103.247.13.34:4145','103.197.94.135:4145','103.197.92.193:4145',
#            '183.81.154.57:4145','203.160.58.194:4145','119.2.65.177:4145','103.28.113.22:11337',
#            '103.15.242.210:55492','36.89.237.172:4145','43.248.24.122:4145','210.57.214.70:4145'] # SOCKS 4
# proxies = ['138.197.157.60','138.197.157.32','138.197.157.45','138.197.145.103','138.197.157.44'] # SOCKS 5
# proxies = ['ruangguru.com:443', 'audisi.ruangguru.com:443', 'uji.ruangguru.com:443', 'ruangguruuji.imgix.net:443',
#            'tracker.ruangguru.com:443', 'bimbel.ruangguru.com:443', 'marketing.ruangguru.com:443',
#            'mitra.ruangguru.com:443',
#            'blog.ruangguru.com:443', 'event.ruangguru.com:443']
# proxies = ['175.184.232.62:9999','139.99.104.233:5467','139.59.99.119:1080','128.199.208.93:38888','47.74.182.63:8080']
proxies = ['118.96.149.97:4145','114.6.176.179:4145','43.248.24.235:4145','210.57.216.109:4145','150.107.246.141:4145',
           '36.67.184.179:4145','122.200.144.25:4145','103.247.13.34:4145','103.197.94.135:4145','103.197.92.193:4145',
           '183.81.154.57:4145','203.160.58.194:4145','119.2.65.177:4145','103.28.113.22:11337',
           '103.15.242.210:55492','36.89.237.172:4145','43.248.24.122:4145','210.57.214.70:4145',
           '175.184.232.62:9999','139.99.104.233:5467','139.59.99.119:1080','128.199.208.93:38888','47.74.182.63:8080',
           '138.197.157.60','138.197.157.32','138.197.157.45','138.197.145.103','138.197.157.44',
           'ruangguru.com:443','audisi.ruangguru.com:443','uji.ruangguru.com:443','ruangguruuji.imgix.net:443',
           'tracker.ruangguru.com:443','bimbel.ruangguru.com:443','marketing.ruangguru.com:443',
           'mitra.ruangguru.com:443','blog.ruangguru.com:443', 'event.ruangguru.com:443']

def proxy_manual(ip):
    try:
        proxy_handler = urllib2.ProxyHandler({'http': ip})
        opener = urllib2.build_opener(proxy_handler)
        opener.addheaders = [('User-Agent', 'Mozilla/5.0')]
        urllib2.install_opener(opener)
        req = urllib2.Request("https://www.google.com/")
        # http://103.41.204.195/ping.php
        sock = urllib2.urlopen(req, timeout=10)
        rs = sock.read(1000)
        if rs is None:
            req2 = urllib2.Request("http://www.google.com/")
            sock2 = urllib2.urlopen(req2, timeout=10)
            rs2 = sock2.read(1000)
            if rs2 is None:
                result_test = "No"
            else:
                result_test = "Yes"
        else:
            result_test = "Yes"
    except:
        result_test = "No"
    return result_test
    # result.append(result_test)

def proxy_socks4(ip, port, timeout):
    try:
        socket.setdefaulttimeout(timeout)
        socks.set_default_proxy(socks.SOCKS4, ip, int(port))
        socket.socket = socks.socksocket
        res = requests.get("https://www.google.com/", timeout=timeout)
        if res.text is None:
            res2= requests.get("http://www.google.com/", timeout=timeout)
            if res2.text is None:
                result_test = "No"
            else:
                result_test = "Yes"
        else:
            result_test = "Yes"
    except:
        result_test = "No"
    return result_test

def proxy_socks5(ip,port,timeout):
    try:
        socket.setdefaulttimeout(timeout)
        socks.set_default_proxy(socks.SOCKS5, ip, int(port))
        socket.socket = socks.socksocket
        res = requests.get("https://www.google.com/", timeout=timeout)
        if res.text is None:
            res2 = requests.get("http://www.google.com/", timeout=timeout)
            if res2.text is None:
                result_test = "No"
            else:
                result_test = "Yes"
        else:
            result_test = "Yes"
    except:
        result_test = "No"
    return result_test

def run_check(address,timeout):
    print(address, threading.currentThread().getName(), 'Starting')
    ip = address.split(":", 2)
    host = ip[0]
    port = 1080
    if len(ip) == 2:
        port = ip[1]
    socks5 = proxy_socks5(host,port,timeout)
    socks4 = proxy_socks4(host,port,timeout)
    http = proxy_manual(ip)
    isi_test = (address,socks5,socks4,http)
    hasil_test.append(isi_test)
    print(threading.currentThread().getName(), 'Exiting')

timeout = 30
hasil_test = []
for ips in proxies:
    t = threading.Thread(target=run_check, args=(ips,timeout))
    t.start()
t.join()

time.sleep(timeout)
print(hasil_test)
for tes in hasil_test:
    ip_addr = tes[0]
    final = "no"
    if "Yes" in tes:
        final = "yes"
    print(ip_addr,final)